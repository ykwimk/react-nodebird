{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyUser = {\n  nickname: 'ykwimk',\n  post: [],\n  followings: [],\n  followers: [],\n  signUpData: {}\n}; //store (초기값)\n\nexport const initialState = {\n  isLogin: false,\n  user: {}\n}; //action의 이름\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAIL = 'LOG_IN_FAIL';\nexport const LOG_OUT = 'LOG_OUT'; //실제 action\n\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data\n  };\n};\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS\n};\nexport const loginAction = {\n  type: LOG_IN\n};\nexport const loginSuccess = {\n  type: LOG_IN_SUCCESS\n};\nexport const loginFail = {\n  type: LOG_IN_FAIL\n};\nexport const logoutAction = {\n  type: LOG_OUT\n}; //reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLogin: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLogin: false,\n          user: {}\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/robin/www/react-nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","post","followings","followers","signUpData","initialState","isLogin","user","SIGN_UP","SIGN_UP_SUCCESS","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAIL","LOG_OUT","signUpAction","data","type","signUpSuccess","loginAction","loginSuccess","loginFail","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,QADM;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,UAAU,EAAE,EAHI;AAIhBC,EAAAA,SAAS,EAAE,EAJK;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAlB,C,CAQA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO;AACLC,IAAAA,IAAI,EAAER,OADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAME,aAAa,GAAG;AAC3BD,EAAAA,IAAI,EAAEP;AADqB,CAAtB;AAGP,OAAO,MAAMS,WAAW,GAAG;AACzBF,EAAAA,IAAI,EAAEN;AADmB,CAApB;AAGP,OAAO,MAAMS,YAAY,GAAG;AAC1BH,EAAAA,IAAI,EAAEL;AADoB,CAArB;AAGP,OAAO,MAAMS,SAAS,GAAG;AACvBJ,EAAAA,IAAI,EAAEJ;AADiB,CAAlB;AAGP,OAAO,MAAMS,YAAY,GAAG;AAC1BL,EAAAA,IAAI,EAAEH;AADoB,CAArB,C,CAIP;;AACA,MAAMS,OAAO,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACR,IAAd;AACE,SAAKN,MAAL;AAAa;AACX,+CACKa,KADL;AAEEjB,UAAAA,OAAO,EAAE,IAFX;AAGEC,UAAAA,IAAI,EAAER;AAHR;AAKD;;AACD,SAAKc,OAAL;AAAc;AACZ,+CACKU,KADL;AAEEjB,UAAAA,OAAO,EAAE,KAFX;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD,SAAKC,OAAL;AAAc;AACZ,+CACKe,KADL;AAEEnB,UAAAA,UAAU,EAAEoB,MAAM,CAACT;AAFrB;AAID;;AACD;AAAS;AACP,iCACKQ,KADL;AAGD;AAzBH;AA2BD,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\n  nickname: 'ykwimk',\n  post: [],\n  followings: [],\n  followers: [],\n  signUpData: {},\n}\n\n//store (초기값)\nexport const initialState = {\n  isLogin: false,\n  user: {},\n}\n\n//action의 이름\nexport const SIGN_UP = 'SIGN_UP'\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\nexport const LOG_IN = 'LOG_IN'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAIL = 'LOG_IN_FAIL'\nexport const LOG_OUT = 'LOG_OUT'\n\n//실제 action\nexport const signUpAction = (data) => {\n  return {\n    type: SIGN_UP,\n    data,\n  }\n}\nexport const signUpSuccess = {\n  type: SIGN_UP_SUCCESS,\n}\nexport const loginAction = {\n  type: LOG_IN,\n}\nexport const loginSuccess = {\n  type: LOG_IN_SUCCESS,\n}\nexport const loginFail = {\n  type: LOG_IN_FAIL\n}\nexport const logoutAction = {\n  type: LOG_OUT,\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case LOG_IN: {\n      return {\n        ...state,\n        isLogin: true,\n        user: dummyUser,\n      }\n    }\n    case LOG_OUT: {\n      return {\n        ...state,\n        isLogin: false,\n        user: {}\n      }\n    }\n    case SIGN_UP: {\n      return {\n        ...state,\n        signUpData: action.data,\n      }\n    }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}