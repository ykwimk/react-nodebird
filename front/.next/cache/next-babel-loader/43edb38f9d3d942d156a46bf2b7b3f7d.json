{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//store (초기값)\nexport var initialState = {\n  isLogin: false,\n  user: {}\n}; //action의 이름\n\nexport var LOG_IN = 'LOG_IN';\nexport var LOG_OUT = 'LOG_OUT'; //실제 action\n\nvar loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'ykwimk'\n  }\n};\nvar logoutAction = {\n  type: LOG_OUT\n}; //reducer\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLogin: true,\n          user: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLogin: false,\n          user: {}\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/robin/www/react-nodebird/front/reducers/user.js"],"names":["initialState","isLogin","user","LOG_IN","LOG_OUT","loginAction","type","data","nickname","logoutAction","reducer","state","action"],"mappings":";;;;;;AAAA;AACA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB,C,CAEP;;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAEH,MADY;AAElBI,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAFY,CAApB;AAOA,IAAMC,YAAY,GAAG;AACnBH,EAAAA,IAAI,EAAEF;AADa,CAArB,C,CAIA;;AACA,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AAChD,UAAOA,MAAM,CAACN,IAAd;AACE,SAAKH,MAAL;AAAa;AACX,+CACKQ,KADL;AAEEV,UAAAA,OAAO,EAAE,IAFX;AAGEC,UAAAA,IAAI,EAAEU,MAAM,CAACL;AAHf;AAKD;;AACD,SAAKH,OAAL;AAAc;AACZ,+CACKO,KADL;AAEEV,UAAAA,OAAO,EAAE,KAFX;AAGEC,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD;AAAS;AACP,iCACKS,KADL;AAGD;AAnBH;AAqBD,CAtBD;;AAwBA,eAAeD,OAAf","sourcesContent":["//store (초기값)\nexport const initialState = {\n  isLogin: false,\n  user: {},\n}\n\n//action의 이름\nexport const LOG_IN = 'LOG_IN'\nexport const LOG_OUT = 'LOG_OUT'\n\n//실제 action\nconst loginAction = {\n  type: LOG_IN,\n  data: {\n    nickname: 'ykwimk',\n  }\n}\n\nconst logoutAction = {\n  type: LOG_OUT,\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case LOG_IN: {\n      return {\n        ...state,\n        isLogin: true,\n        user: action.data\n      }\n    }\n    case LOG_OUT: {\n      return {\n        ...state,\n        isLogin: false,\n        user: {}\n      }\n    }\n    default: {\n      return {\n        ...state\n      }\n    }\n  }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}