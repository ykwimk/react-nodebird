{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/robin/www/react-nodebird/front/pages/signup.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { signUpAction } from '../reducers/user';\nexport var useInput = function useInput() {\n  _s();\n\n  var _useState = useState(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handler = useCallback(function (e) {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\n_s(useInput, \"y1aRB/CEZ9zFk9CajKv2zfZUuiI=\");\n\nvar SignUp = function SignUp() {\n  _s2();\n\n  var _useState2 = useState(''),\n      passwordCheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      passwordCheckError = _useState4[0],\n      setPasswordCheckError = _useState4[1];\n\n  var _useState5 = useState(false),\n      termError = _useState5[0],\n      setTermError = _useState5[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickName = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1];\n\n  var dispatch = useDispatch();\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheckError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  var onSubmit = useCallback(function (e) {\n    if (password !== passwordCheck) {\n      return setPasswordCheckError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    dispatch(signUpAction);\n  }, [password, passwordCheck, term]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      padding: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"userId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"userId\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"nickName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"nickName\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"passwordCheck\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\x1F\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"password\",\n    name: \"passwordCheck\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), passwordCheckError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 34\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC81C\\uB300\\uB85C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    name: \"userTerm\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"\\uC704 \\uB0B4\\uC6A9\\uC774 \\uB9DE\\uC2B5\\uB2C8\\uB2E4.\"), termError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"\\uCCB4\\uD06C\\uB97C \\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\n_s2(SignUp, \"5IUpg73w5epPdLbaPjcMoc9VDCA=\", false, function () {\n  return [useInput, useInput, useInput, useDispatch];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/robin/www/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Checkbox","Button","Input","useDispatch","signUpAction","useInput","value","setValue","handler","e","target","SignUp","passwordCheck","setPasswordCheck","term","setTerm","passwordCheckError","setPasswordCheckError","termError","setTermError","id","onChangeId","nickname","onChangeNickName","password","onChangePassword","dispatch","onChangePasswordCheck","onChangeTerm","checked","onSubmit","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { signUpAction } from '../reducers/user';\n\nexport const useInput = () => {\n  const [ value, setValue ] = useState('')\n  const handler = useCallback((e) => {\n    setValue(e.target.value)\n  }, [])\n\n  return [ value, handler ]\n}\n\nconst SignUp = () => {\n  const [ passwordCheck, setPasswordCheck ] = useState('')\n  const [ term, setTerm ] = useState(false)\n  const [ passwordCheckError, setPasswordCheckError ] = useState(false)\n  const [ termError, setTermError ] = useState(false)\n\n  const [ id, onChangeId ] = useInput('')\n  const [ nickname, onChangeNickName ] = useInput('')\n  const [ password, onChangePassword ] = useInput('')\n\n  const dispatch = useDispatch()\n\n  const onChangePasswordCheck = useCallback((e) => {\n    setPasswordCheckError(e.target.value !== password)\n    setPasswordCheck(e.target.value)\n  }, [password])\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false)\n    setTerm(e.target.checked)\n  }, [])\n\n  const onSubmit = useCallback((e) => {\n    if (password !== passwordCheck) {\n      return setPasswordCheckError(true)\n    }\n    if (!term) {\n      return setTermError(true)\n    }\n    dispatch(signUpAction)\n  }, [password, passwordCheck, term])\n\n  return(\n    <>\n      <Form onFinish={onSubmit} style={{ padding: '10px' }}>\n        <div>\n          <label htmlFor=\"userId\">아이디</label>\n          <br />\n          <Input\n            name=\"userId\"\n            value={id}\n            required\n            onChange={onChangeId}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"nickName\">닉네임</label>\n          <br />\n          <Input\n            name=\"nickName\"\n            value={nickname}\n            required\n            onChange={onChangeNickName}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">비밀번호</label>\n          <br />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={onChangePassword}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"passwordCheck\">비밀번호 확인\u001f</label>\n          <br />\n          <Input\n            type=\"password\"\n            name=\"passwordCheck\"\n            value={passwordCheck}\n            required\n            onChange={onChangePasswordCheck}\n          />\n          {passwordCheckError && <p style={{ color: 'red' }}>비밀번호를 제대로 입력해주세요</p>}\n        </div>\n        <div>\n          <Checkbox\n            name=\"userTerm\"\n            checked={term}\n            onChange={onChangeTerm}\n          >\n            위 내용이 맞습니다.\n          </Checkbox>\n          {termError && <p style={{ color: 'red' }}>체크를 해주세요</p>}\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n        </div>\n      </Form>\n    </>\n  )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}