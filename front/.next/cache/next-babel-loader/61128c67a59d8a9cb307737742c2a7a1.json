{"ast":null,"code":"var _jsxFileName = \"/Users/robin/www/react-nodebird/front/pages/signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport NodeBird from './_app';\n\nconst SignUp = () => {\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordCheckError,\n    1: setPasswordCheckError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n\n  const useInput = () => {\n    const {\n      0: value,\n      1: setValue\n    } = useState('');\n    const handler = useCallback(e => {\n      setValue(e.target.value);\n    }, []);\n    return [value, handler];\n  };\n\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheckError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  const onSubmit = useCallback(e => {\n    if (password !== passwordCheck) {\n      return setPasswordCheckError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n  }, [password, passwordCheck, term]);\n  const [id, onChangeId] = useInput('');\n  const [nickname, onChangeNickName] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  return __jsx(React.Fragment, null, __jsx(NodeBird, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"userId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"userId\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"nickName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    name: \"nickName\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"passwordCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\\x1F\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"password\",\n    name: \"passwordCheck\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), passwordCheckError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 34\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC81C\\uB300\\uB85C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    name: \"userTerm\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"\\uC704 \\uB0B4\\uC6A9\\uC774 \\uB9DE\\uC2B5\\uB2C8\\uB2E4.\"), termError && __jsx(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"\\uCCB4\\uD06C\\uB97C \\uD574\\uC8FC\\uC138\\uC694\")), __jsx(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/robin/www/react-nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","Form","Checkbox","Button","Input","Head","AppLayout","NodeBird","SignUp","passwordCheck","setPasswordCheck","term","setTerm","passwordCheckError","setPasswordCheckError","termError","setTermError","useInput","value","setValue","handler","e","target","onChangePasswordCheck","password","onChangeTerm","checked","onSubmit","id","onChangeId","nickname","onChangeNickName","onChangePassword","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout';\nimport NodeBird from './_app';\n\n\nconst SignUp = () => {\n  const [ passwordCheck, setPasswordCheck ] = useState('')\n  const [ term, setTerm ] = useState(false)\n  const [ passwordCheckError, setPasswordCheckError ] = useState(false)\n  const [ termError, setTermError ] = useState(false)\n\n  const useInput = () => {\n    const [ value, setValue ] = useState('')\n    const handler = useCallback((e) => {\n      setValue(e.target.value)\n    }, [])\n\n    return [ value, handler ]\n  }\n\n  const onChangePasswordCheck = useCallback((e) => {\n    setPasswordCheckError(e.target.value !== password)\n    setPasswordCheck(e.target.value)\n  }, [password])\n\n  const onChangeTerm = useCallback((e) => {\n    setTermError(false)\n    setTerm(e.target.checked)\n  }, [])\n\n  const onSubmit = useCallback((e) => {\n    if (password !== passwordCheck) {\n      return setPasswordCheckError(true)\n    }\n    if (!term) {\n      return setTermError(true)\n    }\n  }, [password, passwordCheck, term])\n\n  const [ id, onChangeId ] = useInput('')\n  const [ nickname, onChangeNickName ] = useInput('')\n  const [ password, onChangePassword ] = useInput('')\n\n  return(\n    <>\n    <NodeBird>\n      <Form onFinish={onSubmit} style={{ padding: '10px' }}>\n        <div>\n          <label htmlFor=\"userId\">아이디</label>\n          <br />\n          <Input\n            name=\"userId\"\n            value={id}\n            required\n            onChange={onChangeId}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"nickName\">닉네임</label>\n          <br />\n          <Input\n            name=\"nickName\"\n            value={nickname}\n            required\n            onChange={onChangeNickName}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">비밀번호</label>\n          <br />\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={onChangePassword}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"passwordCheck\">비밀번호 확인\u001f</label>\n          <br />\n          <Input\n            type=\"password\"\n            name=\"passwordCheck\"\n            value={passwordCheck}\n            required\n            onChange={onChangePasswordCheck}\n          />\n          {passwordCheckError && <p style={{ color: 'red' }}>비밀번호를 제대로 입력해주세요</p>}\n        </div>\n        <div>\n          <Checkbox\n            name=\"userTerm\"\n            checked={term}\n            onChange={onChangeTerm}\n          >\n            위 내용이 맞습니다.\n          </Checkbox>\n          {termError && <p style={{ color: 'red' }}>체크를 해주세요</p>}\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n        </div>\n      </Form>\n    </NodeBird>\n    </>\n  )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}